<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="icon.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAElFTkSuQmCC
</value>
  </data>
</root>